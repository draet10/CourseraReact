{"version":3,"sources":["logo.svg","components/DishDetailComponent.js","components/MenuComponent.js","shared/dishes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","DishDetail","props","date","moment","format","dish","className","top","src","image","alt","name","description","details","this","selectedDish","dishcomment","comments","map","outer","key","id","comment","author","modDate","renderDish","Component","Menu","state","com","setState","menu","dishes","onClick","onDishSelect","width","body","heading","DISHES","category","label","price","rating","App","dark","color","href","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6419c584.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\nimport { Card ,CardImg, CardImgOverlay, CardText, CardBody, CardTitle } from 'reactstrap';\r\nimport moment from 'moment';\r\nclass DishDetail extends Component{\r\n    constructor (props){\r\n        super(props);\r\n        \r\n    }\r\n    modDate(date){\r\n        \r\n        const formattedDate = moment(date).format(\"LL\");\r\n        //console.log(formattedDate);\r\n        return formattedDate;\r\n    }\r\n   \r\n    renderDish(dish) {\r\n        if(dish != null) {\r\n            return (\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                       <Card>\r\n                    <CardImg top src={dish.image} alt={dish.name} />\r\n                    <CardBody>\r\n                      <CardTitle>{dish.name}</CardTitle>\r\n                      <CardText>{dish.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n                </div>\r\n                \r\n            );\r\n        }\r\n    \r\n        else {\r\n            return (\r\n            <div></div>\r\n            );\r\n        }\r\n        }\r\n   \r\n\r\n    render() {\r\n       \r\n        const details=this.props.selectedDish;\r\n        const dishcomment=this.props.comments.map((outer) => {\r\n            return (\r\n                <div key={outer.id}>\r\n                    <div>{outer.comment}</div>\r\n                    <div>--{outer.author}, {this.modDate(outer.date)}</div>\r\n                </div>\r\n              );\r\n        });\r\n\r\n        \r\n     \r\n        return(\r\n            <div className=\"row\">\r\n                {this.renderDish(details)}\r\n                   <div  className=\"col-12 col-md-5 m-1\">\r\n                        <h1>Comments</h1>\r\n                        {dishcomment}\r\n                    </div>\r\n\r\n               </div>    \r\n            \r\n            \r\n        );\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default DishDetail;","import React, { Component } from 'react';\r\nimport { Card ,CardImg, CardImgOverlay, CardText, CardBody, CardTitle } from 'reactstrap';\r\nimport DishDetail from './DishDetailComponent';\r\n\r\nclass Menu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedDish : null,\r\n            com: null\r\n        }\r\n        //console.log(\"Constructor invoked\");\r\n    }\r\n\r\n    \r\n    onDishSelect(dish){\r\n        this.setState({ selectedDish: dish,\r\n        com: dish.comments});\r\n        /*return(\r\n            <DishDetail selectedDish={this.state.selectedDish} />\r\n        );*/\r\n        \r\n        //console.log(\"onDishSelect invoke\");\r\n    }\r\n    renderD(dish){\r\n        if(dish != null){\r\n            return(\r\n                \r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                    <Card>\r\n                    <CardImg top src={dish.image} alt={dish.name} />\r\n                    <CardBody>\r\n                      <CardTitle>{dish.name}</CardTitle>\r\n                      <CardText>{dish.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n                    </div>\r\n                \r\n\r\n            );\r\n        } else{\r\n            return(\r\n                <div></div>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderDish(dish){\r\n        //console.log(\"renderDish invoked\");\r\n        if(dish != null){\r\n            return(\r\n                <DishDetail selectedDish={this.state.selectedDish} comments={this.state.com}></DishDetail>\r\n            );\r\n        } else{\r\n            return(\r\n                <div></div>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        //props was earlier state props is used to import from the parent to child\r\n        const menu = this.props.dishes.map((dish) => {\r\n            return (\r\n              <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n                <Card onClick={() => this.onDishSelect(dish)}>\r\n                    <CardImg width=\"100%\" src={dish.image} alt={dish.name} />\r\n                    <CardImgOverlay body className=\"ml-5\">\r\n                        <CardTitle heading>{dish.name}</CardTitle>\r\n                  </CardImgOverlay>\r\n                </Card>\r\n              </div>\r\n            );\r\n        });\r\n        //console.log(\"render invoked\");\r\n\r\n        return (\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n                  {menu}\r\n            </div>     \r\n                {this.renderDish(this.state.selectedDish)}\r\n            \r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Menu;","export const DISHES =\r\n    [\r\n        {\r\n        id: 0,\r\n        name:'Uthappizza',\r\n        image: 'assets/images/uthappizza.png',\r\n        category: 'mains',\r\n        label:'Hot',\r\n        price:'4.99',\r\n        description:'A unique combination of Indian Uthappam (pancake) and Italian pizza, topped with Cerignola olives, ripe vine cherry tomatoes, Vidalia onion, Guntur chillies and Buffalo Paneer.',\r\n        comments: [\r\n            {\r\n            id: 0,\r\n            rating: 5,\r\n            comment: \"Imagine all the eatables, living in conFusion!\",\r\n            author: \"John Lemon\",\r\n            date: \"2012-10-16T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 1,\r\n            rating: 4,\r\n            comment: \"Sends anyone to heaven, I wish I could get my mother-in-law to eat it!\",\r\n            author: \"Paul McVites\",\r\n            date: \"2014-09-05T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 2,\r\n            rating: 3,\r\n            comment: \"Eat it, just eat it!\",\r\n            author: \"Michael Jaikishan\",\r\n            date: \"2015-02-13T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 3,\r\n            rating: 4,\r\n            comment: \"Ultimate, Reaching for the stars!\",\r\n            author: \"Ringo Starry\",\r\n            date: \"2013-12-02T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 4,\r\n            rating: 2,\r\n            comment: \"It's your birthday, we're gonna party!\",\r\n            author: \"25 Cent\",\r\n            date: \"2011-12-02T17:57:28.556094Z\"\r\n            }\r\n        ]                        },\r\n        {\r\n        id: 1,\r\n        name:'Zucchipakoda',\r\n        image: 'assets/images/zucchipakoda.png',\r\n        category: 'appetizer',\r\n        label:'',\r\n        price:'1.99',\r\n        description:'Deep fried Zucchini coated with mildly spiced Chickpea flour batter accompanied with a sweet-tangy tamarind sauce',\r\n        comments: [\r\n            {\r\n            id: 0,\r\n            rating: 5,\r\n            comment: \"Imagine all the eatables, living in conFusion!\",\r\n            author: \"John Lemon\",\r\n            date: \"2012-10-16T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 1,\r\n            rating: 4,\r\n            comment: \"Sends anyone to heaven, I wish I could get my mother-in-law to eat it!\",\r\n            author: \"Paul McVites\",\r\n            date: \"2014-09-05T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 2,\r\n            rating: 3,\r\n            comment: \"Eat it, just eat it!\",\r\n            author: \"Michael Jaikishan\",\r\n            date: \"2015-02-13T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 3,\r\n            rating: 4,\r\n            comment: \"Ultimate, Reaching for the stars!\",\r\n            author: \"Ringo Starry\",\r\n            date: \"2013-12-02T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 4,\r\n            rating: 2,\r\n            comment: \"It's your birthday, we're gonna party!\",\r\n            author: \"25 Cent\",\r\n            date: \"2011-12-02T17:57:28.556094Z\"\r\n            }\r\n        ]\r\n        },\r\n        {\r\n        id: 2,\r\n        name:'Vadonut',\r\n        image: 'assets/images/vadonut.png',\r\n        category: 'appetizer',\r\n        label:'New',\r\n        price:'1.99',\r\n        description:'A quintessential ConFusion experience, is it a vada or is it a donut?',\r\n        comments: [\r\n            {\r\n            id: 0,\r\n            rating: 5,\r\n            comment: \"Imagine all the eatables, living in conFusion!\",\r\n            author: \"John Lemon\",\r\n            date: \"2012-10-16T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 1,\r\n            rating: 4,\r\n            comment: \"Sends anyone to heaven, I wish I could get my mother-in-law to eat it!\",\r\n            author: \"Paul McVites\",\r\n            date: \"2014-09-05T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 2,\r\n            rating: 3,\r\n            comment: \"Eat it, just eat it!\",\r\n            author: \"Michael Jaikishan\",\r\n            date: \"2015-02-13T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 3,\r\n            rating: 4,\r\n            comment: \"Ultimate, Reaching for the stars!\",\r\n            author: \"Ringo Starry\",\r\n            date: \"2013-12-02T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 4,\r\n            rating: 2,\r\n            comment: \"It's your birthday, we're gonna party!\",\r\n            author: \"25 Cent\",\r\n            date: \"2011-12-02T17:57:28.556094Z\"\r\n            }\r\n        ]\r\n        },\r\n        {\r\n        id: 3,\r\n        name:'ElaiCheese Cake',\r\n        image: 'assets/images/elaicheesecake.png',\r\n        category: 'dessert',\r\n        label:'',\r\n        price:'2.99',\r\n        description:'A delectable, semi-sweet New York Style Cheese Cake, with Graham cracker crust and spiced with Indian cardamoms',\r\n        comments: [\r\n            {\r\n            id: 0,\r\n            rating: 5,\r\n            comment: \"Imagine all the eatables, living in conFusion!\",\r\n            author: \"John Lemon\",\r\n            date: \"2012-10-16T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 1,\r\n            rating: 4,\r\n            comment: \"Sends anyone to heaven, I wish I could get my mother-in-law to eat it!\",\r\n            author: \"Paul McVites\",\r\n            date: \"2014-09-05T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 2,\r\n            rating: 3,\r\n            comment: \"Eat it, just eat it!\",\r\n            author: \"Michael Jaikishan\",\r\n            date: \"2015-02-13T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 3,\r\n            rating: 4,\r\n            comment: \"Ultimate, Reaching for the stars!\",\r\n            author: \"Ringo Starry\",\r\n            date: \"2013-12-02T17:57:28.556094Z\"\r\n            },\r\n            {\r\n            id: 4,\r\n            rating: 2,\r\n            comment: \"It's your birthday, we're gonna party!\",\r\n            author: \"25 Cent\",\r\n            date: \"2011-12-02T17:57:28.556094Z\"\r\n            }\r\n        ]\r\n        }\r\n    ];","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport { Navbar, NavbarBrand } from 'reactstrap';\nimport Menu from './components/MenuComponent';\nimport './App.css';\nimport { DISHES } from './shared/dishes';\n\nclass App extends Component{\n  constructor(props){\n    super(props);\n    this.state={\n      dishes: DISHES\n    };\n  }\n  render(){\n    return (\n      <div >\n        <Navbar dark color=\"primary\">\n          <div className=\"container\">\n            <NavbarBrand href=\"/\">Harry Potter</NavbarBrand>\n          </div>\n        </Navbar>\n        <Menu dishes={this.state.dishes}/> \n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n   <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}